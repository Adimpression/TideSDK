#!/usr/bin/env python

# This file has been modified from its orginal sources.
#
# Copyright (c) 2012 Software in the Public Interest Inc (SPI)
# Copyright (c) 2012 David Pratt
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Copyright (c) 2008-2012 Appcelerator Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import os, os.path as path
Import('build')

env = build.env.Clone()
env.Append(CPPDEFINES=['USE_NO_EXPORT=1', 'UNICODE=1', '_UNICODE=1'])

env.Append(LIBS=[
    'msi',
    'user32',
    'shell32',
    'iphlpapi',
    'advapi32',
    'wininet',
    'urlmon',
    'ole32',
    'gdi32'
])

# Common sources for both the MSI DLL and the update installer.
env.Append(CPPPATH=[build.tide_utils_dir])
sources = ["common.cpp"] + build.get_tide_utils(
    path.join(build.dir, 'objs', 'netinstaller'))

build.mark_build_target(env.Program(
    path.join(build.dir, 'sdk', 'installer', 'installer.exe'),
    sources + ['progress_dialog.cpp', 'update_installer.cpp']))

# Statically-link the MSI DLL.
ccf = env['CCFLAGS'][:]
if '/MD' in ccf:
    ccf.remove('/MD')
ccf.append('/MT')
env['CCFLAGS'] = ccf

env.Append(LIBS=['msi']); # Add the MSI lib.
build.mark_build_target(env.SharedLibrary(
    path.join(build.dir, 'sdk', 'installer', 'tide_installer'),
    sources + ['tide_actions.cpp']))
