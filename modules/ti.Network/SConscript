#!/usr/bin/env python

# This file has been modified from its orginal sources.
#
# Copyright (c) 2012 Software in the Public Interest Inc (SPI)
# Copyright (c) 2012 David Pratt
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Copyright (c) 2008-2012 Appcelerator Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from os import path
Import('build env module')

sources = Glob('*.cpp') + Glob('protocols/irc/*.cpp') + \
    Glob('protocols/http/*.cpp') + Glob('proxy/*.cpp') + Glob('protocols/tcp/*.cpp')

env.Append(CPPDEFINES = ('TITANIUM_NETWORK_API_EXPORT', 1))
build.add_thirdparty(env, 'poco')
build.add_thirdparty(env, 'curl')

if build.is_osx():
    env.Append(FRAMEWORKS=['SystemConfiguration'])

if build.is_linux():
    env.ParseConfig('pkg-config --libs --cflags gdk-2.0 dbus-glib-1')

if build.is_win32():
    env.Append(CCFLAGS=['/MD', '/DUNICODE', '/D_UNICODE'])
    env.Append(LIBS=['wsock32','ws2_32', 'ole32', 'comsuppw', 'wbemuuid'])
    env.Append(CPPDEFINES = ('WIN32_LEAN_AND_MEAN',1))

# Copy the support files the module build directory
build.utils.LightWeightCopy(path.join(build.cwd(), 'support'), module.dir)
build.mark_build_target(env.SharedLibrary(
    path.join(module.dir, 'tinetworkmodule'), sources))
